/* ----------------------- IMPORTS ----------------------------- */

@import '../foundation/fonts';
@import '../foundation/form';
@import '../foundation/responsive';
@import '../foundation/colors';
@import '../foundation/animations';
@import '../foundation/gallery';

/* ----------------------- ANIMATIONS ----------------------------- */

// The animations responsible gracefully removing an order block from view
@include keyframes($name: removeOrderBlock)
{
	0%
	{
		margin:
		{
			top: 25px;
			bottom: 25px;
		}

		border:
		{
			width: 3px;
		}

		opacity: 1.0;

		min-height: 800px;
		height: auto;
	}

	45%
	{
		margin:
		{
			top: 25px;
			bottom: 25px;
		}

		border:
		{
			width: 3px;
		}

		opacity: 0.0;

		min-height: 800px;
		height: auto;
	}

	90%
	{
		margin:
		{
			top: 25px;
			bottom: 25px;
		}

		border:
		{
			width: 3px;
		}

		opacity: 0.0;

		min-height: 0px;
		height: 0px;
	}

	100%
	{
		margin:
		{
			top: 0px;
			bottom: 0px;
		}

		border:
		{
			width: 0px;
		}

		opacity: 0.0;

		min-height: 0px;
		height: 0px;
	}
}

/* ----------------------- STYLES ----------------------------- */

#orderListing
{
	@include transitionSettings($property: opacity, $duration: 0.35s);

	opacity: 0.0;

	min-height: 1400px;

	&.reveal
	{
		opacity: 1.0;
	}
}

.orderBlock, .orderGrouping, .orderInfoSection, .orderInfoSectionHeader, .orderCell, .orderIDCell, .orderStatusCell, .dueDateCell
{
	display: flex;
	align-items: center;
	justify-content: center;
}

.orderBlock
{
	border:
	{
		style: solid;
		width: 3px;
		radius: 25px;
		color: map-get($COLORS, grayTheme);
	}

	margin:
	{
		top: 25px;
		bottom: 25px;
		left: auto;
		right: auto;
	}

	flex-direction: column;
	width: 800px;
	height: auto;
	min-height: 800px;

	opacity: 1.0;
	overflow: hidden;

	&.hide
	{
		@include animationSettings($keyframeSet: removeOrderBlock, $duration: 0.9s, $timing: ease-in-out, $persist: true);
	}
}

.orderGrouping
{
	border-bottom:
	{
		style: solid;
		width: 2px;
		color: map-get($COLORS, darkGrayTheme);
	}

	flex-direction: row;

	width: 100%;

	// Webkit browsers need to have the container heights explicitly defined to properly align the cell groupings
	@include webkitOnly()
	{
		height: 350px;
	}

	&.flexHeight
	{
		flex-direction: column;

		@include webkitOnly()
		{
			min-height: 100px;
			height: auto;
		}
	}
}

.orderInfoSection
{
	flex-direction: column;
	height: 100%;

	&:nth-of-type(1)
	{
		align-self: flex-start;
		flex: 1;
	}

	&:nth-of-type(2), &:nth-of-type(3)
	{
		justify-content: flex-start;
		flex: 2;
	}

	&:last-of-type > .orderInfoSectionHeader
	{
		border-right: none;
	}
}

.orderIDCell
{
	@extend %significantText;

	border:
	{
		style: solid;
		width: 2px;
		color: map-get($COLORS, darkGrayTheme);

		top: none;
		left: none;
	}

	width: 100%;
	flex: 1;

	background-color: map-get($COLORS, lightBlueTheme);
}

.orderStatusCell
{
	@extend %significantText;

	border-right:
	{
		style: solid;
		width: 2px;
		color: map-get($COLORS, darkGrayTheme);
	}

	width: 100%;
	flex: 1;

	color: map-get($COLORS, darkGreenTheme);
}

.orderInfoSectionHeader
{
	@extend %tabularHeaderText;

	border:
	{
		style: solid;
		width: 2px;
		color: map-get($COLORS, darkGrayTheme);

		top: none;
		left: none;
	}

	padding:
	{
		top: 10px;
		bottom: 10px;
	}

	text-align: center;

	width: 100%;
	height: 30px;

	background-color: map-get($COLORS, lightBlueTheme);
}

.orderCell
{
	@extend %tabularRegularText;

	padding: 10px;

	width: 100%;
	flex: 1;

	& > i
	{
		margin-right: 7px;
	}
}


.dueDateCell
{
	@extend %bigSignificantText;

	border-left:
	{
		style: solid;
		width: 1px;
		color: map-get($COLORS, lightGrayTheme);
	}

	width: 100%;
	flex: 1;

	flex-direction: column;
}

.monthCell
{
	@extend %significantText;
}

.dateCell
{
	@extend %giantNumberText;
}

.orderLabel
{
	@extend %tabularLabelText;

	margin-right: 5px;
}

.orderNavButtons
{
	height: auto;
	min-height: 80px;

	& > .orderInfoSection > .orderCell
	{
		color: map-get($COLORS, mahoganyTheme);
	}
}

.printLink, .loadPicturesLink, .convertOrderLink, .invoiceLink, .trashLink
{
	@extend %regularLinkText;

	&:hover
	{
		cursor: pointer;
		text-decoration: underline;
	}

	& > i
	{
		font-size: 20px;

		margin-right: 10px;
	}
}

.loadPicturesLink
{
	@include transitionSettings($property: opacity, $duration: 0.3s);

	padding:
	{
		top: 25px;
		bottom: 25px;
	}

	width: 100%;

	opacity: 1.0;

	&.hide
	{
		opacity: 0.0;
	}
}

.detailsButton
{
	@include button($bgColor: darkBlueTheme);

	margin:
	{
		left: auto;
		right: 25px;
	}

	width: 100px;

	text-decoration: none;

	& > i
	{
		margin-left: 10px;
	}
}

#nothingToDisplay
{
	@extend %tabularHeaderText;

	padding:
	{
		top: 50px;
		bottom: 50px;
	}
}

.timeLeftCell
{
	border-left:
	{
		width: 3px;
		color: map-get($COLORS, darkerGrayTheme);
		style: solid;
	}

	display: flex;
	align-items: center;
	flex-direction: column;

	&.orderCell
	{
		padding: 0px;
	}

	& > div
	{
		flex: 1;

		display: flex;
		align-items: center;
		justify-content: center;

		&:first-of-type
		{
			align-items: flex-end;
			padding-bottom: 5px;
		}

		&:last-of-type
		{
			align-items: flex-start;
			padding-top: 5px;
		}
	}
}

.daysRemainingText
{
	@extend %bigSignificantText;
}

.greenPriority
{
	background-color: map-get($COLORS, lightGreenTheme);
}

.yellowPriority
{
	background-color: map-get($COLORS, lightYellowTheme);
}

.redPriority
{
	background-color: map-get($COLORS, lightRedTheme);
}

.criticalPriority
{
	background-color: map-get($COLORS, indianRedTheme);
}

.linkText
{
	color: map-get($COLORS, darkerBlueTheme);
	cursor: pointer;
	text-decoration: none;

	&:hover
	{
		text-decoration: underline;
	}

	& > i
	{
		margin-left: 5px;
	}
}