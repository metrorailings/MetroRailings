/* ----------------------- LOCAL CONSTANTS ----------------------------- */

$DEVICE_WIDTHS:
(
	smartPhoneOnly: 733px,

	tabletMin: 734px,
	tabletMax: 1023px,

	desktopOnly: 1024px
);

/* ----------------------- MIX-INS ----------------------------- */

/*
 * Mix-in is responsible for enforcing CSS stylings only on devices that can (at minimum) support resolution
 * expected from a desktop environment
 *
 * @author kinsho
 */
@mixin desktopOnly()
{
	@media only screen and (min-device-width: map-get($DEVICE_WIDTHS, desktopOnly))
	{
		@content;
	}
}

/*
 * Mix-in is responsible for enforcing CSS stylings only on devices that can (at minimum) support resolution
 * expected from a tablet environment
 *
 * @author kinsho
 */
@mixin tabletUp()
{
	@media only screen and (min-device-width: map-get($DEVICE_WIDTHS, tabletMin))
	{
		@content;
	}
}

/*
 * Mix-in is responsible for enforcing CSS stylings only on devices that support resolution expected from
 * a tablet environment
 *
 * @author kinsho
 */
@mixin tabletOnly()
{
	@media only screen and (min-device-width: map-get($DEVICE_WIDTHS, tabletMin)) and (max-device-width: map-get($DEVICE_WIDTHS, tabletMax))
	{
		@content;
	}
}

/*
 * Mix-in is responsible for enforcing CSS stylings only on devices that support resolution expected from
 * a smartphone environment
 *
 * @author kinsho
 */
@mixin phoneOnly()
{
	@media only screen and (max-device-width: map-get($DEVICE_WIDTHS, smartPhoneOnly))
	{
		@content;
	}
}

/*
 * Mix-in is responsible for enforcing CSS stylings only on devices that support resolution expected from
 * a mobile environment
 *
 * @author kinsho
 */
@mixin mobileOnly()
{
	@media only screen and (max-device-width: map-get($DEVICE_WIDTHS, tabletMax))
	{
		@content;
	}
}

/*
 * Mix-in is responsible for enforcing CSS stylings only on viewports where the width is longer than the height
 *
 * @author kinsho
 */
@mixin landscapeOnly()
{
	@media only screen and (orientation: landscape)
	{
		@content;
	}
}

/*
 * Mix-in is responsible for enforcing CSS stylings only on mobile devices that are currently displaying content
 * in portrait mode
 *
 * @author kinsho
 */
@mixin portraitMobileOnly()
{
	@media only screen and (max-device-width: map-get($DEVICE_WIDTHS, tabletMax)) and (orientation: portrait)
	{
		@content;
	}
}

/*
 * Mix-in is responsible for enforcing CSS stylings only on mobile devices that are currently displaying content
 * in landscape mode
 *
 * @author kinsho
 */
@mixin landscapeMobileOnly()
{
	@media only screen and (max-device-width: map-get($DEVICE_WIDTHS, tabletMax)) and (orientation: landscape)
	{
		@content;
	}
}